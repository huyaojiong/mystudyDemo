1.Activity的理解：
    1）活动：四大组件之一
    2）作用：提供能让用户操作并与之交互的界面
    3）组件的特点：
    它的类必须实现特定接口或继承特定类
    需要在配置文件中配置其全类名
    它的对象不是通过new来创建的, 而是系统自动创建的
    它的对象具有一定的生命周期, 它的类中有对应的生命周期回调方法
2.Intent的理解：
    1)意图：信使（Activity，Service,BroadcastReceiver三个组件间通信的信使）
    2)分类：显示：操作当前应用自己的组件
            隐式：操作其他应用自己的组件
3.Intent的使用
    1）创建：
    显示：Intent(Context context, Class clazz)
    隐式：Intent(String action)//与Activity与intent-filter的action匹配
    2）携带数据
    额外：putExtra(String key,Xxx value)//内部用map容器保存
    有特定前缀：setData(Uri data)//tel:123123,smsto:123123
    3）读取数据
    额外：Xxx getXxxExtra(String key)
    有特定前缀：Uri getData()
4.Activity的使用
1）定义
    a.定义一个类继承 Activity，并重写生命周期方法
    b.在功能清单文件中使用<activity>注册
2）启动
     a.一般：startActivity(Intent intent)
     b.带回调启动:startActivityForResult(int reqCode, Intent intent)
      重写：onActivityResult(int reqCode, int resultCode, Intent data)
3）结束
     a.一般：finish()
     b.带结果的：setResult(int resultCode, Intent data)
      getIntent(): 得到启动Activity的意图
5.TaskStack
    在Android中，系统用Task Stack (Back Stack)结构来存储管理启动的Activity对象
    一个应用启动,系统就会为其创建一个对应的Task Stack来存储并管理该应用的Activity对象
    只有最上面的任务栈的栈顶的Activity才能显示在窗口中
6.launchMode
    standard: 标准模式，每次调用startActivity()方法就会产生一个新的实例。
    singleTop: 如果已经有一个实例位于Activity栈的顶部时，就不产生新的实例；如果不位于栈顶，会产生一个新的实例。
    singleTask: 只有一个实例, 默认在当前Task中
    singleInstance: 只有一个实例, 创建时会新建一个栈, 且此栈中不能有其它对象

